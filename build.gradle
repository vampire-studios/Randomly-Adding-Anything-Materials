buildscript {
	dependencies {
		classpath 'de.guntram.mcmod:crowdin-translate:1.3+1.17'
	}
	repositories {
		maven {
			name = 'CrowdinTranslate source'
			url = "https://minecraft.guntram.de/maven/"
		}
	}
}

plugins {
	id 'maven-publish'
	id "com.modrinth.minotaur" version "2.+"
	id 'fabric-loom' version '1.1-SNAPSHOT'
	id 'io.github.juuxel.loom-quiltflower' version '1.9.+'
}

apply plugin: 'de.guntram.mcmod.crowdin-translate'

crowdintranslate.crowdinProjectName = 'randomly-adding-anything-mater'
crowdintranslate.minecraftProjectName = 'raa_materials'
crowdintranslate.verbose = true

archivesBaseName = project.archives_base_name
version = "$mod_version+build.$build_number-${libs.versions.minecraft.get()}"
group = project.maven_group

repositories {
	mavenCentral()
	mavenLocal()
	maven { url = "https://maven.shedaniel.me/" }
	maven { url = "https://maven.terraformersmc.com/" }
	maven { url = 'https://maven.quiltmc.org/repository/release' }
	maven { url = 'https://maven.quiltmc.org/repository/snapshot' }
	maven { url = "https://maven.parchmentmc.org" }
	maven { url = "https://jitpack.io" }
	maven { url = "https://maven.siphalor.de" }
	maven { url = "https://cursemaven.com" }
	maven { url = "https://mvn.devos.one/releases/" }
	maven { url = "https://mvn.devos.one/snapshots/" }
	maven { url = "https://api.modrinth.com/maven" }
	maven { url = "https://aperlambda.github.io/maven" }
	maven { url = "https://maven.cafeteria.dev" }
	maven { url = "https://maven.jamieswhiteshirt.com/libs-release" }
	maven { url = "https://aperlambda.github.io/maven" }
	maven { url = "https://maven.tterrag.com/" }
	maven { url = "https://maven.blamejared.com" }
	maven { url = "https://maven.wispforest.io/" }
	maven { url = "https://ladysnake.jfrog.io/artifactory/mods" }
	maven { url = "https://minecraft.guntram.de/maven/" }
	maven { url = "https://maven.theepicblock.nl" }
}

loom {
	accessWidenerPath = file("src/main/resources/raa_materials.accesswidener")
}

configurations.configureEach {
	resolutionStrategy {
		force("net.fabricmc.fabric-api:fabric-api:0.58.0+1.19")
		force("net.fabricmc:fabric-loader:0.14.21")
	}
}

dependencies {
	minecraft libs.minecraft
	mappings loom.layered {
		it.mappings("org.quiltmc:quilt-mappings:${libs.versions.quilt.mappings.get()}:intermediary-v2")
//		it.mappings("net.fabricmc:yarn:${libs.versions.fabric.mappings.get()}:v2")
		it.parchment("org.parchmentmc.data:parchment-1.19.4:${libs.versions.parchment.get()}@zip")
		it.officialMojangMappings()
	}

	modImplementation libs.fabric.loader

	modImplementation libs.fabric.api

	modImplementation (libs.raa.core)

//	modImplementation (libs.create)

	modImplementation(include("com.electronwill.night-config:core:3.6.3"))
	modImplementation(include("com.electronwill.night-config:toml:3.6.3"))

//	modImplementation (libs.spectrum)

	modImplementation (libs.crowdin.translate)

	modApi("me.shedaniel.cloth:cloth-config-fabric:8.3.103") {
		exclude(group: "net.fabricmc.fabric-api")
	}

	modApi("io.github.vampirestudios:artifice:0.40.0+build.1-1.19.3-EXPERIMENTAL") {
		exclude(group: "net.fabricmc.fabric-api")
	}
}

processResources {
	inputs.property 'version', version

	filesMatching('fabric.mod.json') {
		expand 'version': version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
	it.options.encoding = 'UTF-8'
}

java {
	withSourcesJar()
	toolchain.languageVersion = JavaLanguageVersion.of(17)
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
	it.options.encoding = 'UTF-8'
}

compileJava {
	options.compilerArgs += '--enable-preview'
}

build {
	dependsOn downloadTranslations
}

publishing {
	publications {
		mavenJava( MavenPublication ) {
			from components.java
		}
	}
	repositories {
		if (project.hasProperty("siphalorMavenUser")) {
			maven {
				name = "Siphalor"
				url = "https://maven.siphalor.de/upload.php"
				credentials {
					username = siphalorMavenUser
					password = siphalorMavenPassword
				}
			}
		}
	}
}
